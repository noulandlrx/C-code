#include<stdio.h>
//单个数字输出
int SingalNum(int i) {
    switch (i) {
    case 1:
        printf("one"); break;
    case 2:
        printf("two"); break;
    case 3:
        printf("three"); break;
    case 4:
        printf("four"); break;
    case 5:
        printf("five"); break;
    case 6:
        printf("six"); break;
    case 7:
        printf("seven"); break;
    case 8:
        printf("eight"); break;
    case 9:
        printf("nine"); break;
    }
    return 0;
}

int lower99(int i) {
    if (i >= 20) {
        switch (i / 10) {
            //   case 1:
            //  printf("one");break;
        case 2:
            printf("twenty"); break;
        case 3:
            printf("thirty"); break;
        case 4:
            printf("forty"); break;
        case 5:
            printf("fifty"); break;
        case 6:
            printf("sixty"); break;
        case 7:
            printf("seventy"); break;
        case 8:
            printf("eighty"); break;
        case 9:
            printf("ninty"); break;
        }
        if (i % 10 != 0) {
            printf(" ");
            SingalNum(i % 10);
        }
    }
    else if(i>=10) {
            switch (i) {
            case 10:
                printf("ten"); break;
            case 11:
                printf("eleven"); break;
            case 12:
                printf("twelve"); break;
            case 13:
                printf("thirteen"); break;
            case 14:
                printf("fourteen"); break;
            case 15:
                printf("fifteen"); break;
            case 16:
                printf("sixteen"); break;
            case 17:
                printf("seventeen"); break;
            case 18:
                printf("eighteen"); break;
            case 19:
                printf("nineteen"); break;
            }
    }
    else
         SingalNum(i);
    return 0;
}
int lower1000(int i) {
    if (i / 100 != 0) {
        SingalNum(i / 100);
        printf(" hundred ");
        if (i / 10 % 10 != 0) {
            printf(" and ");
            lower99(i % 100);
        }
        else //if (i % 10 != 0)
                //SingalNum(i % 10);
            lower99(i % 100);
    }
    else if (i  /10 % 10 != 0) {
        //printf(" and ");
        lower99(i % 100);
    }
    else if(i%10!=0)
        SingalNum(i % 10);
    return 0;
}

int main() {
    int n = 0;
    while (scanf_s("%d", &n) != EOF) {
        if (n / 1000000 != 0) {
            lower1000(n / 1000000);
            printf(" million ");
            if (n % 1000000 / 1000 != 0) {
                lower1000(n % 1000000 / 1000);
                printf(" thousand ");
            }
            lower1000(n % 1000);
        }
        else if (n / 1000 != 0) {
            lower1000(n /1000);
            printf(" thousand ");
            lower1000(n % 1000);
        }
        else
            lower1000(n );
        printf("\n");
    }
    return 0;
}
运行结果
123456
one hundred  and twenty three thousand four hundred  and fifty six
102345
one hundred two thousand three hundred  and forty five
43567854
forty three million five hundred  and sixty seven thousand eight hundred  and fifty four
22
twenty two
16
sixteen
7
seven
