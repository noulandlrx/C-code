////算法1，使用递归
//int sumfac() {
//	int n = 0, mul = 0,sum=0,i;
//	printf("请输入求前n个数阶乘和的n\n");
//	scanf_s("%d", &n);
//	if(n>=0)
//	{ 
//		for (i = 0; i <= n; i++)
//		{
//			mul = factorial(i);
//			sum += mul;
//		}
//	printf("前n个数阶乘的和为%d", sum);
//	}
//	else
//	printf("输入错误，请输入正整数");
//	return 0;
//}
//算法2，使用for循环，外循环从1··i··n，内循环求i的阶乘
int sumfac() {
	int n = 0, mul = 1, sum = 0, i,j;
	printf("请输入求前n个数阶乘和的n\n");
	scanf_s("%d", &n);
	////方法1
	//for (i = 1; i <=n; i++) {
	//	mul = 1;//每次内循环结束后，mul的值为（i-1）的阶乘
	//	for (j = 1; j <=i; j++) {
	//		mul *= j;
	//	}
	//	sum += mul;
	//}
	//优化方法2
	for (i = 1; i <= n; i++) {
		mul *= i;
		sum += mul;
	}
	printf("前n个数阶乘的和为%d", sum);
}
